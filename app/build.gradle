apply plugin: 'com.android.application'

// Kotlin default Libraries
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

// Kotlin Annotation Processor
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 29
    defaultConfig {
        applicationId "com.akash.weather"
        minSdkVersion 23
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "env"

    productFlavors {
        final TEST_VERSION = "0.0.0.1"

        staging {
            versionCode 1
            versionName TEST_VERSION + "_DEV"
            buildConfigField "boolean", "IS_PROD", "false"
            buildConfigField "String", "BASE_URL", '"http://api.openweathermap.org/"'
        }

        prod {
            versionCode 1
            versionName "1.0.0"
            buildConfigField "boolean", "IS_PROD", "true"
            buildConfigField "String", "BASE_URL", '"http://api.openweathermap.org/"'
        }
    }

    dependencies {
        implementation fileTree(dir: 'libs', include: ['*.jar'])

        // Android Support
        implementation 'androidx.appcompat:appcompat:1.1.0'

        // Kotlin
        implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
        implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
        implementation 'androidx.core:core-ktx:1.1.0'

        // Constraint Layout
        implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

        // Material
        implementation 'com.google.android.material:material:1.0.0'

        // Card View
        implementation "androidx.cardview:cardview:1.0.0"
        implementation "androidx.recyclerview:recyclerview:1.0.0"

        // LifeCycle
        implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
        implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"

        // Dagger2
        implementation "com.google.dagger:dagger:$dagger2_version"
        annotationProcessor "com.google.dagger:dagger-compiler:$dagger2_version"
        kapt "com.google.dagger:dagger-compiler:$dagger2_version"

        // RxJava
        implementation "io.reactivex.rxjava2:rxjava:$rxjava_version"
        implementation "io.reactivex.rxjava2:rxandroid:$rxandroid_version"

        // OkHttp
        implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"
        implementation "com.squareup.okhttp3:okhttp:$okhttp_version"

        // Retrofit
        implementation("com.squareup.retrofit2:retrofit:$retrofit_version") {
            // exclude Retrofitâ€™s OkHttp dependency module and define your own module import
            exclude module: 'okhttp'
        }
        implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
        implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"

        // Glide
        implementation 'com.github.bumptech.glide:glide:4.9.0'
        annotationProcessor 'com.github.bumptech.glide:compiler:4.9.0'
        kapt 'com.github.bumptech.glide:compiler:4.9.0'

        // Timber for Logging
        implementation 'com.jakewharton.timber:timber:4.7.1'

        /** Test **/
        // JUnit
        testImplementation 'junit:junit:4.12'
        // AndroidX
        testImplementation "androidx.arch.core:core-testing:$androidXArchCoreTestingVersion"
        // Mock
        testImplementation "com.nhaarman:mockito-kotlin:$nhaarmanMockVersion"
        testImplementation "org.mockito:mockito-inline:$mockitoVersion"

        /** Android Test **/
        // AndroidX
        androidTestImplementation "androidx.test.ext:junit:$androidXTestJUnitVersion"
        debugImplementation("androidx.fragment:fragment-testing:$fragmentVersion") {
            exclude group: 'androidx.test', module: 'core'
        }
        androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
        androidTestImplementation("androidx.test.espresso:espresso-contrib:$espressoVersion") {
            exclude group: 'androidx.test', module: 'core'
        }
        // Mock
        androidTestImplementation "com.nhaarman:mockito-kotlin:$nhaarmanMockVersion"
        androidTestImplementation "org.mockito:mockito-android:$mockitoVersion"
    }
}
